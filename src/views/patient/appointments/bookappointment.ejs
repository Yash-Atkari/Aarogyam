<%- layout("./layouts/patientboilerplate") %>

<!-- Link external CSS -->
<link rel="stylesheet" href="/css/patient/appointments/bookappointment.css">

<div class="container">
    <div class="form-header">
        <h2>Book an Appointment</h2>
    </div>
    <div class="appointment-form-container my-3">
        <form id="appointmentForm" action="/patient/bookappointment" method="POST" enctype="application/x-www-form-urlencoded" class="needs-validation" novalidate>
            
            <div class="mb-2">
                <label class="form-label">Select Doctor</label>
                <select name="patient[doctorId]" class="form-select" required>
                    <option value="" selected disabled>Select a doctor</option>
                    <% doctors.forEach(doctor => { %>
                        <option value="<%= doctor._id %>">
                            <%= doctor.fullName || doctor.username %> (<%= doctor.specialization %>)
                        </option>
                    <% }); %>
                </select>
                <div class="invalid-feedback">Please select a doctor.</div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Appointment Date</label>
                <input type="text" id="appointmentDate" name="patient[appointmentDate]" class="form-control" required>
                <div class="invalid-feedback">Please select a date.</div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Time Slot</label>
                <select name="patient[timeSlot]" id="timeSlot" class="form-select" required>
                    <option value="" selected disabled>Select a time</option>
                </select>
                <div class="invalid-feedback">Please choose a time slot.</div>
            </div>
        
            <div class="mb-2">
                <label class="form-label">Reason/Condition</label>
                <textarea name="patient[reason]" class="form-control" rows="3"></textarea>
            </div>
        
            <button class="btn btn-primary" type="submit">Book Appointment</button>
        </form>        
    </div>
</div>

<!-- Scripts -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("appointmentForm");
        form.addEventListener("submit", function (event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add("was-validated");
        });
    });
</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const doctorSelect = document.querySelector("select[name='patient[doctorId]']");
    const dateInput = document.getElementById("appointmentDate");
    const timeSlotSelect = document.getElementById("timeSlot");
    let calendar;

    doctorSelect.addEventListener("change", async function () {
        const doctorId = this.value;
        if (!doctorId) return;

        const response = await fetch(`/doctor/${doctorId}/slots`);
        const data = await response.json();

        const validDates = [...new Set(data.slots.map(slot =>
            new Date(slot.date).toISOString().split("T")[0]
        ))];

        if (calendar) calendar.destroy();

        calendar = flatpickr(dateInput, {
            dateFormat: "Y-m-d",
            enable: validDates
        });

        timeSlotSelect.innerHTML = `<option value="" disabled selected>Select a time</option>`;
    });

    dateInput.addEventListener("change", async function () {
        const doctorId = doctorSelect.value;
        const selectedDate = this.value;
        if (!doctorId || !selectedDate) return;

        const response = await fetch(`/doctor/${doctorId}/slots?date=${selectedDate}`);
        const data = await response.json();

        timeSlotSelect.innerHTML = `<option value="" disabled selected>Select a time</option>`;

        if (data.slots && data.slots.length > 0) {
            data.slots.forEach(slot => {
                const option = document.createElement("option");
                option.value = `${slot.startTime}-${slot.endTime}`;
                option.textContent = `${slot.startTime} - ${slot.endTime}`;
                timeSlotSelect.appendChild(option);
            });
        } else {
            const option = document.createElement("option");
            option.disabled = true;
            option.textContent = "No slots available";
            timeSlotSelect.appendChild(option);
        }
    });
});
</script>

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
